import telebot as tb
import config
import random

bot = tb.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    """

    :param message:
    :return:
    """

    # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ 1–π –ø—Ä–∏–º–µ—Ä
    msg = f"""–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n–Ø - <b>{bot.get_me().first_name}</b>, –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∫–∞–∂–¥–æ–º—É –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —Ö—É–¥–æ–∂–Ω–∏–∫–æ–º. \n """
    bot.send_message(message.chat.id, msg, parse_mode='html')
    __send_photo(chat_id=message.chat.id, photo_path='data/test_examples/output_4_4_1024.jpg',
                 msg="–°–º–æ—Ç—Ä–∏ –∫–∞–∫–∏–µ –∫–ª–µ–≤—ã–µ —à—Ç—É–∫–∏ –º—ã —Å —Ç–æ–±–æ–π –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å!")

    # keyboard
    markup = tb.types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1, item2 = tb.types.KeyboardButton("–ö—É–ª, —Ö–æ—á—É —Ç–∞–∫–∂–µ —Å –º–æ–∏–º–∏ —Ñ–æ—Ç–æ!"), tb.types.KeyboardButton("–ù–µ, –æ—Ç—Å—Ç–æ–π")
    markup.add(item1, item2)
    bot.send_message(message.chat.id, "–ù—É —á–µ, –ø–æ—Ö—É–¥–æ–∂–Ω–∏—á–∞–µ–º —á—É—Ç–∫–∞?", parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.chat.type == 'private':
        if message.text == '–ö—É–ª, —Ö–æ—á—É —Ç–∞–∫–∂–µ —Å –º–æ–∏–º–∏ —Ñ–æ—Ç–æ!':
            bot.send_message(message.chat.id, "–©–∞ –Ω–∞–º—É—Ç–∏–º, –±—Ä–æ! –°–∫–∏–Ω—å —Å–≤–æ—é —Ñ–æ—Ç–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
            # TODO: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–∫—É
        elif message.text == '–ù–µ, –æ—Ç—Å—Ç–æ–π':
            bot.send_message(message.chat.id, "–•—É–¥–æ–∂–Ω–∏–∫–∞ –æ–±–∏–¥–∏—Ç—å –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç!")
        else:
            bot.send_message(message.chat.id, '–Ø –∏ –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∞–∫–æ–µ..')


@bot.message_handler(content_types=['photo'])
def __handle_get_photo(message):
    if message.chat.type == 'private':
        # TODO: —É—Å–ª–æ–≤–∏—è, —á—Ç–æ —ç—Ç–æ –ø–æ—Å–ª–µ –ø—Ä–æ—à–ª–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
        msg_photo = message.photo
        photo_id = message.photo[1].file_id
        # file_info = bot.get_file(message.photo.file_id)
        file_info = bot.get_file(photo_id)
        downloaded_file = bot.download_file(file_info.file_path)
        with open('data/input/usr_input.jpg', 'wb') as new_file:
            new_file.write(downloaded_file)

        bot.send_message(message.chat_id, "–°–º–æ—Ç—Ä–∏, —á—Ç–æ —É –Ω–∞—Å –≤—ã—à–ª–æ!")
        __send_photo(chat_id=message.chat.id, photo_path='data/test_examples/output_4_4_1024.jpg', msg="–ö—É–ª?!")


def __send_photo(chat_id, msg, photo_path):
    ex_1 = open(photo_path, 'rb')
    bot.send_message(chat_id, msg)
    bot.send_photo(chat_id, photo=ex_1)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                                  reply_markup=None)

            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                                      text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
